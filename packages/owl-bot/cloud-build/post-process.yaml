# Copyright 2020 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# An attacker could slip some nasty code into owlbot.py or specify a custom
# docker image in .OwlBot.yaml and steal secrets when Owl Bot runs the
# post processor.
#
# Our first line of defense against this attack is that Owl Bot only runs
# the post processor for pull requests authored by Googlers or with a
# owlbot:run label applied by a Googler.  But humans err and a clever hacker
# may be able to slip one by.
#
# Our second line of defense is the context in which the post processor
# specified by this yaml file is run.  It runs with no github tokens.
# It only has privileges to write logs, and to write to a single cloud
# storage bucket.  This yaml runs the post processor and stores the zipped
# result in the bucket.  Later, the Owl Bot Cloud Task fetches the zip and
# pushes the result to github.

steps:
  # Check git version
  - name: 'gcr.io/cloud-builders/git'
    args:
      - --version
  # Populate global username, email for git:
  - name: 'gcr.io/cloud-builders/git'
    args:
      - config
      - --global
      - user.email
      - 'gcf-owl-bot[bot]@users.noreply.github.com'
    env:
      - 'HOME=/workspace'
  - name: 'gcr.io/cloud-builders/git'
    args:
      - config
      - --global
      - user.name
      - 'Owl Bot'
    env:
      - 'HOME=/workspace'
  - name: 'gcr.io/cloud-builders/git'
    args:
      - config
      - --global
      - pull.rebase
      - 'false'
    env:
      - 'HOME=/workspace'

  # Clone user/branch that created PR:
  - name: 'gcr.io/cloud-builders/git'
    args:
      - clone
      - -b
      - ${_PR_BRANCH}
      - --depth
      - '2'
      - https://github.com/${_PR_OWNER}/${_REPOSITORY}.git
    env:
      - 'HOME=/workspace'

  # Run container listed in OwlBot.yaml:
  - name: ${_CONTAINER}
    dir: '${_REPOSITORY}'
    env:
      - 'DEFAULT_BRANCH=$_DEFAULT_BRANCH'

  # Store the results in cloud storage.
  - name: 'gcr.io/cloud-devrel-public-resources/owlbot-cli:rennie-test'
    args:
      - zip-post-processor-update
      - --path
      - '/workspace/${_CLOUD_STORAGE_PATH}'
    dir: ${_REPOSITORY}
    env:
      - 'HOME=/workspace'

# Store the artifacts in Google Cloud Storage
artifacts:
  objects:
    location: 'gs://${_CLOUD_STORAGE_BUCKET}'
    paths: ['${_CLOUD_STORAGE_BUCKET}']

# allow 20 minutes for the post-processor image to run
timeout: '1200s'
logsBucket: 'gs://repo-automation-bots-post-processor-logs'